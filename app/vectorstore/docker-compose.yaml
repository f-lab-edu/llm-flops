version: "3"
services:
  opensearch-node: # Docker 네트워크 내의 컨테이너 호스트 이름입니다 (예: https://opensearch-node/)
    image: opensearchproject/opensearch:latest
    container_name: opensearch-node
    environment:
      - cluster.name=opensearch-cluster # 클러스터 이름 설정
      - node.name=opensearch-node # 이 컨테이너에서 실행될 노드 이름 설정
      - discovery.seed_hosts=opensearch-node # 클러스터를 검색할 때 찾을 노드
      - cluster.initial_cluster_manager_nodes=opensearch-node # 클러스터 관리자로 사용할 수 있는 노드
      - bootstrap.memory_lock=true # JVM 힙 메모리 스와핑 비활성화
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # 시스템 RAM의 최소 및 최대 JVM 힙 크기를 최소 50%로 설정
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD} # 데모 환경을 사용할 때 관리자 사용자 비밀번호를 설정 (.env파일에 환경변수를 비밀번호를 저장)
    ulimits:
      memlock:
        soft: -1 # 메모리 잠금을 무제한으로 설정 (소프트 제한 및 하드 제한 없음)
        hard: -1
      nofile:
        soft: 65536 # opensearch 사용자의 최대 열기 가능한 파일 수 - 최소 65536으로 설정
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data # opensearch-data라는 볼륨을 생성하고 이를 컨테이너에 마운트합니다
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # 성능 분석기
    networks:
      - opensearch-net

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest # opensearch-dashboards의 버전이 다른 노드에 설치된 opensearch의 버전과 일치하는지 확인 필요합니다
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # 호스트 포트 5601을 컨테이너 포트 5601로 매핑
    expose:
      - "ad" # OpenSearch Dashboards에 웹 액세스를 위한 포트 5601 노출
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node:9200"]' # OpenSearch Dashboards가 쿼리할 OpenSearch 노드 정의
    networks:
      - opensearch-net
volumes:
  opensearch-data:

networks:
  opensearch-net:
